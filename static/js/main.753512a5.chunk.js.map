{"version":3,"sources":["useForm.js","LoginFormValidationRules.js","Form.js","Table.js","HomeButton.js","App.js","reportWebVitals.js","index.js"],"names":["useForm","callback","validate","useState","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","email","test","password","queries","xs","sm","Form","props","setLoggedIn","parentCallback","to","loggedIn","className","style","backgroundImage","height","width","backgroundRepeat","backgroundSize","textAlign","fontWeight","fontSize","onSubmit","noValidate","autoComplete","type","onChange","required","empList","id","phone","city","birthCity","App","preferDarkMode","setPreferDarkMode","data","setData","theme","createMuiTheme","palette","align","backgroundColor","color","display","paddingTop","FormControlLabel","control","Switch","checked","label","labelPlacement","title","columns","field","editable","lookup","onRowAdd","newRow","Promise","resolve","reject","updatedRows","Math","floor","random","setTimeout","onRowDelete","selectedRow","index","tableData","splice","onRowUpdate","updatedRow","oldRow","options","actionsColumnIndex","addRowPosition","exportButton","HomeButton","useHistory","Table","setloggedIn","path","childData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.753512a5.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors]);\r\n\r\n  const handleSubmit = event => {\r\n    if (event) event.preventDefault();\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n    setValues(values => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors\r\n  };\r\n};\r\n\r\nexport default useForm;","export default function validate(values) {\r\n    let errors = {};\r\n    if (!values.email) {\r\n      errors.email = \"Email address is required\";\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n      errors.email = \"Email address is invalid\";\r\n    }\r\n    if (!values.password) {\r\n      errors.password = \"Password is required\";\r\n    } else if (values.password.length < 8) {\r\n      errors.password = \"Password must be 8 or more characters\";\r\n    } else if (!/\\d/.test(values.password)) {\r\n      errors.password = \"Password must contain atleast 1 number\";\r\n    } else if (!/[!@#$%&?]/g.test(values.password)) {\r\n      errors.password = \"Password must contain atleast 1 special character\";\r\n    } else if (!/[A-Z]/g.test(values.password)) {\r\n      errors.password = \"Password must contain atleast 1 capitol letter\";\r\n    }\r\n    return errors;\r\n  }\r\n  ","import React, { useState } from \"react\";\r\nimport useForm from \"./useForm\";\r\nimport validate from \"./LoginFormValidationRules\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport './Form.css';\r\n\r\nconst queries = {\r\n  xs: '(max-width:320px)',\r\n  sm: '(max-width:720px)',\r\n\r\n}\r\n\r\nconst Form = props => {\r\n  const { values, errors, handleChange, handleSubmit } = useForm(\r\n    login,\r\n    validate\r\n  );\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  function login() {\r\n    setLoggedIn(true);\r\n    props.parentCallback(true);\r\n    return <Redirect to=\"/default\" />;\r\n  }\r\n\r\n  return (\r\n    <div className='node'  queries={queries} style={{backgroundImage:'url(https://www.intheblack.com/-/media/intheblack/allimages/sponsored-content/2018/dexus-office-space.jpg?rev=835b5eb0fcd5481b960b7abfeec3eed2)',height:'100vh',width:'100%',backgroundRepeat:'no-repeat',backgroundSize:'100%'}}>\r\n    <div className=\"section is-fullheight\">\r\n      {loggedIn && <Redirect to=\"/default\" />}\r\n      <div className=\"container\">\r\n        <div className=\"column is-6 is-offset-3\">\r\n          <div className=\"box\">\r\n            <h1 style={{textAlign:'center',fontWeight:'bold',fontSize:'35px'}}>Login</h1>\r\n            <form onSubmit={handleSubmit} noValidate>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Email Address</label>\r\n                <div className=\"control\">\r\n                  <input\r\n                    autoComplete=\"off\"\r\n                    className={`input ${errors.email && \"is-danger\"}`}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={handleChange}\r\n                    value={values.email || \"\"}\r\n                    required\r\n                  />\r\n                  {errors.email && (\r\n                    <p className=\"help is-danger\">{errors.email}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Password</label>\r\n                <div className=\"control\">\r\n                  <input\r\n                    className={`input ${errors.password && \"is-danger\"}`}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={handleChange}\r\n                    value={values.password || \"\"}\r\n                    required\r\n                  />\r\n                </div>\r\n                {errors.password && (\r\n                  <p className=\"help is-danger\">{errors.password}</p>\r\n                )}\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button is-block is-info is-fullwidth\"\r\n              >\r\n                Login\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport MaterialTable from 'material-table';\r\n//import XLSX from 'xlsx';\r\nimport { MuiThemeProvider, createMuiTheme, FormControlLabel,Switch} from '@material-ui/core';\r\n\r\n\r\n\r\n\r\n\r\nconst empList = [\r\n  { id: 1, name: \"Neeraj\", email: 'neeraj@gmail.com', phone: 9876543210, city: \"Bangalore\",birthCity: 63},\r\n  { id: 2, name: \"Raj\", email: 'raj@gmail.com', phone: 9812345678, city: \"Chennai\",birthCity: 34 },\r\n  { id: 3, name: \"David\", email: 'david342@gmail.com', phone: 7896536289, city: \"Jaipur\",birthCity: 34 },\r\n  { id: 4, name: \"Vikas\", email: 'vikas75@gmail.com', phone: 9087654321, city: \"Hyderabad\",birthCity: 34 },\r\n  { id: 5, name: \"Vijay\", email: 'Vijay@gmail.com', phone: 9187654321, city: \"Chennai\",birthCity: 34 },\r\n  { id: 6, name: \"Arun\", email: 'Arun@gmail.com', phone: 9507654321, city: \"Hyderabad\",birthCity: 34 },\r\n  { id: 7, name: \"Akash\", email: 'Akash@gmail.com.com', phone: 90345678, city: \"Delhi\",birthCity: 34 },\r\n  { id: 8, name: \"Sara\", email: 'Sara@gmail.com', phone: 908765432124, city: \"Hyderabad\",birthCity: 34 },\r\n  { id: 9, name: \"Varun\", email: 'Varun@gmail.com', phone: 9087654323, city: \"Mumbai\" ,birthCity: 34},\r\n  { id: 10, name: \"Varshu\", email: 'Varshu@gmail.com', phone: 7903425289, city: \"Kolkata\",birthCity: 34 },\r\n]\r\n\r\nfunction App() {\r\n\r\n    const [preferDarkMode,setPreferDarkMode]=useState(true);\r\n\r\n  const [data, setData] = useState(empList)\r\n  const columns = [\r\n    { title: \"ID\", field: \"id\", editable: false },\r\n    { title: \"Name\", field: \"name\" },\r\n    { title: \"Email\", field: \"email\" },\r\n    { title: \"Phone Number\", field: 'phone', },\r\n    {title:\"City\",field:'city'},\r\n    \r\n    {\r\n      title: 'Status',\r\n      field: 'birthCity',\r\n      lookup: { 34: 'Absent', 63: 'Present' },\r\n    },\r\n  ]\r\n\r\n  \r\n  const theme=createMuiTheme({\r\n      palette:{\r\n          type:preferDarkMode?'dark':'light'\r\n      }\r\n  })\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <MuiThemeProvider theme={theme}>\r\n      <h1 align=\"center\" style={{backgroundColor:'black',color:'white',height:'50px',display:'cover',paddingTop:'5px'}}>Employee Data</h1>\r\n      <h4 align='center'>Material Table with CRUD operation</h4>\r\n      <FormControlLabel\r\n          value=\"top\"\r\n          control={<Switch color=\"primary\" checked={preferDarkMode} />}\r\n          onChange={()=>setPreferDarkMode(!preferDarkMode)}\r\n          label=\"Dark Mode\"\r\n          labelPlacement=\"top\"\r\n        />\r\n      \r\n      <MaterialTable className=\"body\"\r\n        title=\"\"\r\n        data={data}\r\n        columns={columns}\r\n\r\n        \r\n        \r\n        \r\n        editable={{\r\n            onRowAdd: (newRow) => new Promise((resolve, reject) => {\r\n            const updatedRows = [...data, { id: Math.floor(Math.random() * 100), ...newRow }]\r\n            setTimeout(() => {\r\n              setData(updatedRows)\r\n              resolve()\r\n            }, 2000)\r\n          }),\r\n          \r\n          onRowDelete: selectedRow => new Promise((resolve, reject) => {\r\n            const index = selectedRow.tableData.id;\r\n            const updatedRows = [...data]\r\n            updatedRows.splice(index, 1)\r\n            setTimeout(() => {\r\n              setData(updatedRows)\r\n              resolve()\r\n            }, 2000)\r\n          }),\r\n          onRowUpdate:(updatedRow,oldRow)=>new Promise((resolve,reject)=>{\r\n            const index=oldRow.tableData.id;\r\n            const updatedRows=[...data]\r\n            updatedRows[index]=updatedRow\r\n            setTimeout(() => {\r\n              setData(updatedRows)\r\n              resolve()\r\n            }, 2000)\r\n          })\r\n\r\n        }}\r\n\r\n        \r\n\r\n\r\n\r\n        options={{\r\n          actionsColumnIndex: -1, addRowPosition: \"first\",exportButton:true\r\n        }}\r\n\r\n        \r\n\r\n\r\n\r\n      />\r\n      </MuiThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n      \r\n     ","import Table from './Table';\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction HomeButton() {\r\n  let history = useHistory();\r\n\r\n  function handleClick() {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      \r\n      \r\n      <Table />\r\n      \r\n      \r\n    \r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeButton;","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport Form from \"./Form\";\n//import Dashboard from \"./Dashboard\";\nimport HomeButton from './HomeButton';\n\nconst App = () => {\n  const [loggedIn, setloggedIn] = useState(false);\n\n  function callbackFunction(childData) {\n    setloggedIn(childData);\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/HomeButton\">\n          {loggedIn ? <HomeButton/> : <Redirect to=\"/\" />}\n        </Route>\n        <Route path=\"/\">\n          {loggedIn ? (\n            <Redirect to=\"/HomeButton\" />\n          ) : (\n            <Form parentCallback={callbackFunction} />\n          )}\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bulma/css/bulma.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}